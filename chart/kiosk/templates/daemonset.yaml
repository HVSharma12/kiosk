apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "kiosk.fullname" . }}
  labels:
    {{- include "kiosk.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "kiosk.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kiosk.selectorLabels" . | nindent 8 }}
      {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: x11
          image: {{ .Values.X11.image.repository }}:{{ .Values.X11.image.tag }}
          imagePullPolicy: {{ .Values.X11.image.pullPolicy }}
          securityContext:
            privileged: true
            readOnlyRootFilesystem: false
          volumeMounts:
            - mountPath: /tmp/.X11-unix/
              name: xsocket
            - mountPath: /home/user/xauthority/
              name: xauthority
            - mountPath: /run/udev/data/
              name: udev-data
            {{- with .Values.X11.keyboardModMap }}
            - mountPath: /root/.Xmodmap
              subPath: .Xmodmap
              name: xmodmap
            {{- end }}
            {{- with .Values.X11.xinitrcOverride }}
            - mountPath: /etc/X11/xinit/
              name: xinitrc
            {{- end }}
            {{- with .Values.X11.customKeyboardLayout }}
            - name: xkb-config
              mountPath: /usr/share/X11/xkb/symbols/custom_layout
              subPath: custom_layout
            {{- end }}
            {{- with .Values.X11.customBackgroundConfigMap }}
            - name: custom-background
              mountPath: /usr/share/wallpapers/SLEdefault/contents/images
            {{- end }}
            - mountPath: /usr/local/nvidia/toolkit
              name: nvidia-toolkit
              readOnly: true
            - mountPath: /dev/nvidia0
              name: dev-nvidia0
            - mountPath: /dev/nvidiactl
              name: dev-nvidiactl
            - mountPath: /dev/nvidia-uvm
              name: dev-nvidia-uvm
            - mountPath: /dev/nvidia-uvm-tools
              name: dev-nvidia-uvm-tools
        - name: pulseaudio
          image: {{ .Values.pulseaudio.image.repository }}:{{ .Values.pulseaudio.image.tag }}
          imagePullPolicy: {{ .Values.pulseaudio.image.pullPolicy }}
          securityContext:
            privileged: true
            readOnlyRootFilesystem: false
          env:
            - name: PULSE_SERVER
              value: "/var/run/pulse/native"
            - name: DISPLAY
              value: ':0'
            - name: XAUTHORITY
              value: /root/xauthority/.xauth
          volumeMounts:
            - mountPath: /tmp/.X11-unix/
              name: xsocket
            - mountPath: /root/xauthority/
              name: xauthority
            - mountPath: /var/run/pulse/
              name: pasocket
            - mountPath: /run/udev/data/
              name: udev-data
        {{- if .Values.workload.nssdbSecretName }}
        - name: nssdb-fixowner
          image: {{ .Values.X11.image.repository }}:{{ .Values.X11.image.tag }}
          imagePullPolicy: {{ .Values.X11.image.pullPolicy }}
          command: [ "bash" ]
          args:
            - -c
            - "mkdir /tmp/new/nssdb; cp /tmp/old/* /tmp/new/nssdb/; chown 1000 -R /tmp/new/nssdb"
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /tmp/old
              name: nssdb-tmp
            - mountPath: /tmp/new
              name: nssdb
        {{- end }}
      containers:
        - name: workload
          image: "{{ .Values.workload.image.repository }}:{{ .Values.workload.image.tag }}"
          imagePullPolicy: {{ .Values.workload.image.pullPolicy }}
          securityContext:
            runAsUser: 1000
          env:
            {{- range .Values.workload.env }}
            - name: "{{ .name }}"
              value: "{{ .value }}"
            {{- end }}
            {{- if .Values.workload.url }}
            - name: URL
              value: "{{ .Values.workload.url }}"
            {{- end }}
            - name: PULSE_SERVER
              value: "/var/run/pulse/native"
            - name: DISPLAY
              value: ':0'
            - name: XAUTHORITY
              value: /home/user/xauthority/.xauth
          volumeMounts:
            - mountPath: /tmp/.X11-unix/
              name: xsocket
            - mountPath: /home/user/xauthority/
              name: xauthority
            - mountPath: /var/run/pulse/
              name: pasocket
            {{- if .Values.workload.nssdbSecretName }}
            - mountPath: /home/user/.pki
              name: nssdb
            {{- end }}
            - mountPath: /usr/local/nvidia/toolkit
              name: nvidia-toolkit
              readOnly: true
            - mountPath: /dev/nvidia0
              name: dev-nvidia0
            - mountPath: /dev/nvidiactl
              name: dev-nvidiactl
            - mountPath: /dev/nvidia-uvm
              name: dev-nvidia-uvm
            - mountPath: /dev/nvidia-uvm-tools
              name: dev-nvidia-uvm-tools
      volumes:
        - name: xauthority
          emptyDir: {}
        - name: xsocket
          emptyDir: {}
        - name: pasocket
          emptyDir: {}
        - name: udev-data
          hostPath:
            path: /run/udev/data/
            type: Directory
        - name: nvidia-toolkit
          hostPath:
            path: /usr/local/nvidia/toolkit
            type: Directory
        - name: dev-nvidia0
          hostPath:
            path: /dev/nvidia0
            type: CharDevice
        - name: dev-nvidiactl
          hostPath:
            path: /dev/nvidiactl
            type: CharDevice
        - name: dev-nvidia-uvm
          hostPath:
            path: /dev/nvidia-uvm
            type: CharDevice
        - name: dev-nvidia-uvm-tools
          hostPath:
            path: /dev/nvidia-uvm-tools
            type: CharDevice
