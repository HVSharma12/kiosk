apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "kiosk.fullname" . }}
  labels:
    {{- include "kiosk.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "kiosk.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kiosk.selectorLabels" . | nindent 8 }}
      {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: x11
          image: {{ .Values.X11.image.repository }}:{{ .Values.X11.image.tag }}
          imagePullPolicy: {{ .Values.X11.image.pullPolicy }}
          restartPolicy: Always
          securityContext:
            privileged: true
            readOnlyRootFilesystem: false
          volumeMounts:
            - mountPath: /tmp/.X11-unix/
              name: xsocket
            - mountPath: /home/user/xauthority/
              name: xauthority
            - mountPath: /run/udev/data/
              name: udev-data
            {{- with .Values.X11.keyboardModMap }}
            - mountPath: /root/.Xmodmap
              subPath: .Xmodmap
              name: xmodmap
            {{- end }}
            {{- with .Values.X11.xinitrcOverride }}
            - mountPath: /etc/X11/xinit/
              subPath: xinitrc
              name: xinitrc
            {{- end }}
        - name: pulseaudio
          image: {{ .Values.pulseaudio.image.repository }}:{{ .Values.pulseaudio.image.tag }}
          imagePullPolicy: {{ .Values.pulseaudio.image.pullPolicy }}
          command: ["bash"]
          args: ["-c", "chmod a+rw /dev/snd/*; pulseaudio"]
          restartPolicy: Always
          securityContext: 
            privileged: true
            readOnlyRootFilesystem: false
          env:
          - name: PULSE_SERVER
            value: "/var/run/pulse/native" 
          - name: DISPLAY
            value: ':0'
          - name: XAUTHORITY
            value: /root/xauthority/.xauth
          volumeMounts:
            - mountPath: /tmp/.X11-unix/
              name: xsocket
            - mountPath: /root/xauthority/
              name: xauthority
            - mountPath: /var/run/pulse/
              name: pasocket
            - mountPath: /run/udev/data/
              name: udev-data
        {{ if .Values.workload.nssdbSecretName }}
        - name: nssdb-fixowner
          image: {{ .Values.X11.image.repository }}:{{ .Values.X11.image.tag }}
          imagePullPolicy: {{ .Values.X11.image.pullPolicy }}
          command: [ "bash" ]
          args: 
            - -c
            -  "mkdir /tmp/new/nssdb; cp /tmp/old/* /tmp/new/nssdb/; chown 1000 -R /tmp/new/nssdb"
          securityContext: 
            runAsUser: 0
          volumeMounts:
            - mountPath: /tmp/old
              name: nssdb-tmp
            - mountPath: /tmp/new
              name: nssdb
        {{ end }}
      containers:
        - name: workload
          image: "{{ .Values.workload.image.repository }}:{{ .Values.workload.image.tag }}"
          imagePullPolicy: {{ .Values.workload.image.pullPolicy }}
          securityContext:
            runAsUser: 1000
          env: 
          {{- range .Values.workload.env }}
          - name: "{{ .name }}"
            value: "{{ .value }}"
          {{- end }}
          {{ if .Values.workload.url }}
          - name: URL
            value: "{{ .Values.workload.url }}"
          {{ end }}
          - name: PULSE_SERVER
            value: "/var/run/pulse/native"
          - name: DISPLAY
            value: ':0'
          - name: XAUTHORITY
            value: /home/user/xauthority/.xauth
          volumeMounts:
            - mountPath: /tmp/.X11-unix/
              name: xsocket
            - mountPath: /home/user/xauthority/
              name: xauthority
            - mountPath: /var/run/pulse/
              name: pasocket
            {{ if .Values.workload.nssdbSecretName }}
            - mountPath: /home/user/.pki
              name: nssdb
            {{ end }}
            {{- range .Values.workload.additionalSecrets }}
            - name: "extsecret-wl-{{ .name }}"
              mountPath: {{ .mountPath }}
            {{- end }}
            {{- range .Values.workload.additionalConfigMaps }}
            - name: "extconfig-wl-{{ .name }}"
              mountPath: {{ .mountPath }}
            {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{ if .Values.vnc.enabled }}
        - name: vnc
          image: "{{ .Values.vnc.image.repository }}:{{ .Values.vnc.image.tag }}"
          imagePullPolicy: {{ .Values.vnc.image.pullPolicy }}
          ports:
          - containerPort: 5900
            name: vnc
          env:
            - name: DISPLAY
              value: ':0'
            - name: XAUTHORITY
              value: /home/user/xauthority/.xauth
          volumeMounts:
            - mountPath: /tmp/.X11-unix/
              name: xsocket
            - mountPath: /home/user/xauthority/
              name: xauthority
        {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      dnsPolicy: ClusterFirst
      terminationGracePeriodSeconds: 5
      {{ if .Values.hostAliases}}
      hostAliases:
        {{- toYaml .Values.hostAliases | nindent 8 }}
      {{ end }}
      volumes:
        - name: xauthority
          emptyDir: {}
        - name: xsocket
          emptyDir: {}
        - name: pasocket
          emptyDir: {}
        - name: udev-data
          hostPath:
            path: /run/udev/data/
            type: Directory
        {{- with .Values.X11.keyboardModMap }}
        - name: xmodmap
          configMap:
            name: xmodmap
        {{- end }}
        {{- with .Values.X11.xinitrcOverride }}
        - name: xinitrc
          configMap: 
            name: xinitrc
        {{- end }}
        {{ if .Values.workload.nssdbSecretName }}
        - name: nssdb
          emptyDir: {}
        - name: nssdb-tmp
          secret: 
            secretName: {{ .Values.workload.nssdbSecretName }}
        {{ end }}
        {{- range .Values.workload.additionalSecrets }}
        - name: "extsecret-wl-{{ .name }}"
          secret: 
            secretName: "{{ .name }}"
        {{- end }}
        {{- range .Values.workload.additionalConfigMaps }}
        - name: "extconfig-wl-{{ .name }}"
          configMap: 
            name: "{{ .name }}"
        {{- end }}
